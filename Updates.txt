
-- ==============================
-- Updates for Branch Table
-- ==============================

-- 1. Update the branch name for branch_id = 1.
UPDATE Branch
SET branch_name = 'Central Downtown Branch'
WHERE branch_id = 1;

-- 2. Update the phone number for the branch with the name 'Uptown Branch'.
UPDATE Branch
SET phone = '555-0199'
WHERE branch_name = 'Uptown Branch';

-- 3. Update the address for branch_id = 2.
UPDATE Branch
SET address = '456 Updated Elm St, New Cityville'
WHERE branch_id = 2;

-- 4. Append " - Updated" to the branch name and set a new phone for branches located in "Cityville".
UPDATE Branch
SET branch_name = branch_name || ' - Updated',
    phone = '555-9999'
WHERE address LIKE '%Seaside%';


-- ==============================
-- Updates for Customer Table
-- ==============================

-- 1. Update the email for customer_id = 1.
UPDATE Customer
SET email = 'john.new@example.com'
WHERE customer_id = 1;

-- 2. Increase the credit score by 10 for customers born before 1985.
UPDATE Customer
SET credit_score = credit_score + 10
WHERE date_of_birth < '1985-01-01';

-- 3. Change the phone and address for customer_id = 2.
UPDATE Customer
SET phone = '555-9998',
    address = 'Updated address, London'
WHERE customer_id = 2;

-- 4. Update the credit score for customers with last name 'Doe'.
UPDATE Customer
SET credit_score = 730
WHERE last_name = 'Doe';


-- ==============================
-- Updates for Account Table
-- ==============================

-- 1. Increase the balance of account_id = 1 by 100.
UPDATE Account
SET balance = balance + 100.00
WHERE account_id = 1;

-- 2. Set the interest_rate to 2.00 for Savings accounts with balance > 3000.
UPDATE Account
SET interest_rate = 2.00
WHERE account_type = 'Savings' AND balance > 3000;

-- 3. Mark account_id = 6 as 'Inactive'.
UPDATE Account
SET status = 'Inactive'
WHERE account_id = 6;

-- 4. Deduct 50 from the balance and mark accounts as 'Flagged' for Checking accounts with balance > 5000.
UPDATE Account
SET balance = balance - 50.00,
    status = 'Flagged'
WHERE account_type = 'Checking' AND balance > 5000;


-- ==============================
-- Updates for Beneficiary Table
-- ==============================

-- 1. Update the beneficiary name for beneficiary_id = 1.
UPDATE Beneficiary
SET beneficiary_name = 'Michael Doe Jr.'
WHERE beneficiary_id = 1;

-- 2. Change the relationship to 'Child' for beneficiary_id = 4.
UPDATE Beneficiary
SET relationship = 'Child'
WHERE beneficiary_id = 4;

-- 3. Update the relationship to 'Sibling' for beneficiaries whose name contains 'Smith'.
UPDATE Beneficiary
SET relationship = 'Sibling'
WHERE beneficiary_name LIKE '%Smith%';

-- 4. Append " (Updated)" to the beneficiary name for all with relationship 'Friend'.
UPDATE Beneficiary
SET beneficiary_name = beneficiary_name || ' (Updated)'
WHERE relationship = 'Friend';


-- ==============================
-- Updates for AccountBeneficiary Junction Table
-- ==============================

-- 1. For account_id = 1, change beneficiary_id from 1 to 2.
UPDATE AccountBeneficiary
SET beneficiary_id = 2
WHERE account_id = 1 AND beneficiary_id = 1;

-- 2. For account_id = 2, update beneficiary_id to 3.
UPDATE AccountBeneficiary
SET beneficiary_id = 3
WHERE account_id = 2 AND beneficiary_id = 2;

-- 3. For account_id = 4, change beneficiary_id to 4.
UPDATE AccountBeneficiary
SET beneficiary_id = 4
WHERE account_id = 4;

-- 4. For account_id <= 5, increment account_id by 5
UPDATE AccountBeneficiary
SET account_id = account_id + 5
WHERE account_id <= 5;


-- ==============================
-- Updates for Transaction Table
-- ==============================

-- 1. Increase the amount of transaction_id = 1 by 50.
UPDATE Transaction
SET amount = amount + 50.00
WHERE transaction_id = 1;

-- 2. Change the transaction_date for transaction_id = 2.
UPDATE Transaction
SET transaction_date = '2025-03-11'
WHERE transaction_id = 2;

-- 3. For account_id = 3, update transaction_type from 'Transfer' to 'Deposit'.
UPDATE Transaction
SET transaction_type = 'Deposit'
WHERE account_id = 3 AND transaction_type = 'Transfer';

-- 4. For transactions with amount less than 500, increase the amount by 5% and set the transaction_date to today.
UPDATE Transaction
SET amount = amount * 1.05,
    transaction_date = CURRENT_DATE
WHERE amount < 500;


-- ==============================
-- Updates for CreditCard Table
-- ==============================

-- 1. Update the status to 'Active' for card_id = 2.
UPDATE CreditCard
SET status = 'Active'
WHERE card_id = 2;

-- 2. Change the expiration_date for card_id = 1.
UPDATE CreditCard
SET expiration_date = '2027-12-31'
WHERE card_id = 1;

-- 3. Increase the credit_limit by 1000 for the customer with customer_id = 5.
UPDATE CreditCard
SET credit_limit = credit_limit + 1000.00
WHERE customer_id = 5;

-- 4. For the card with a specific card_number pattern, set the status to 'Blocked' and reduce the credit_limit by 500.
UPDATE CreditCard
SET status = 'Blocked',
    credit_limit = credit_limit - 500.00
WHERE card_number LIKE '4000000000000004';


-- ==============================
-- Updates for Loan Table
-- ==============================

-- 1. Update the status of loan_id = 5 to 'Closed'.
UPDATE Loan
SET status = 'Closed'
WHERE loan_id = 5;

-- 2. Decrease the interest_rate by 0.25 for Home loans that are currently 'Active'.
UPDATE Loan
SET interest_rate = interest_rate - 0.25
WHERE loan_type = 'Home' AND status = 'Active';

-- 3. Increase the loan amount by 500 for loan_id = 1.
UPDATE Loan
SET amount = amount + 500.00
WHERE loan_id = 1;

-- 4. For Business loans that are Pending, extend the term by 12 months and mark them as 'Active'.
UPDATE Loan
SET term_months = term_months + 12,
    status = 'Active'
WHERE loan_type = 'Business' AND status = 'Pending';


-- ==============================
-- Updates for LoanPayment Table
-- ==============================

-- 1. Increase the amount_paid by 50 for payment_id = 1.
UPDATE LoanPayment
SET amount_paid = amount_paid + 50.00
WHERE payment_id = 1;

-- 2. Update the payment_date for payment_id = 2.
UPDATE LoanPayment
SET payment_date = '2025-03-15'
WHERE payment_id = 2;

-- 3. For payments related to loan_id = 3, increase amount_paid by 10%.
UPDATE LoanPayment
SET amount_paid = amount_paid * 1.10
WHERE loan_id = 3;

-- 4. For payments made before '2025-03-05', reduce amount_paid by 20 and update payment_date to current date.
UPDATE LoanPayment
SET amount_paid = amount_paid - 20.00,
    payment_date = CURRENT_DATE
WHERE payment_date < '2025-03-05';


-- ==============================
-- Updates for Employee Table
-- ==============================

-- 1. Update the email for employee_id = 1.
UPDATE Employee
SET email = 'laura.miller.new@bank.com'
WHERE employee_id = 1;

-- 2. Change the phone number for employee_id = 2.
UPDATE Employee
SET phone = '555-2099'
WHERE employee_id = 2;

-- 3. Update the role for employee_id = 4 to 'Manager'.
UPDATE Employee
SET role = 'Manager'
WHERE employee_id = 4;

-- 4. For all employees with an email ending in '@bank.com', ensure email is stored in lower case.
UPDATE Employee
SET email = LOWER(email)
WHERE email LIKE '%@bank.com';

-- ==============================
-- Updates for AuditLog Table
-- ==============================

-- 1. Update the action text for log_id = 1.
UPDATE AuditLog
SET action = 'User logged in successfully'
WHERE log_id = 1;

-- 2. Change the action_time for log_id = 2.
UPDATE AuditLog
SET action_time = '2025-03-12 10:00:00'
WHERE log_id = 2;

-- 3. For a specific log entry of a Customer, update the action details.
UPDATE AuditLog
SET action = 'Customer viewed updated account details'
WHERE user_type = 'Customer' AND log_id = 3;

-- 4. Append "(verified)" to any action text containing "Approved" and refresh the action_time.
UPDATE AuditLog
SET action = action || ' (verified)',
    action_time = CURRENT_TIMESTAMP
WHERE action LIKE '%Approved%';
